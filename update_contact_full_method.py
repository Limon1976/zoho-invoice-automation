#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ - —Ç–æ—á–Ω–æ –∫–∞–∫ —Å LUNA BEAUTY
1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ Zoho API
2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞  
4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞
"""

import asyncio
import json
import sys
from pathlib import Path

sys.path.append(str(Path(__file__).parent))

from src.infrastructure.zoho_api import ZohoAPIClient
from src.infrastructure.config import get_config
from src.domain.services.contact_cache import OptimizedContactCache

async def update_contact_full_method():
    """–ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ - –º–µ—Ç–æ–¥ LUNA BEAUTY"""
    
    print('üîÑ –ü–û–õ–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–ù–¢–ê–ö–¢–ê - –ú–ï–¢–û–î LUNA BEAUTY')
    print('='*70)
    print('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω–æ —Ç–æ—Ç –∂–µ –∞–ª–≥–æ—Ä–∏—Ç–º —á—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–ª —Å LUNA BEAUTY')
    print()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç - AEvent –∏–∑ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    test_contact = {
        'contact_id': '281497000005903525',
        'company_name': 'AEvent Antonina Koroleva Obukhov Eugenia Gu≈Çajewska Sp√≥≈Çka Cywilna',
        'current_vat': '9512598212',
        'new_vat': 'PL9512598212'
    }
    
    config = get_config()
    organization_id = '20082562863'  # PARKENTERTAINMENT
    
    api_client = ZohoAPIClient(
        client_id=config.zoho.client_id,
        client_secret=config.zoho.client_secret,
        refresh_token=config.zoho.refresh_token or ''
    )
    
    print(f'üéØ –û–ë–ù–û–í–õ–Ø–ï–ú: {test_contact["company_name"]}')
    print(f'üìç Contact ID: {test_contact["contact_id"]}')
    print(f'üîÑ VAT: "{test_contact["current_vat"]}" ‚Üí "{test_contact["new_vat"]}"')
    print()
    
    try:
        # –®–ê–ì 1: –û–±–Ω–æ–≤–ª—è–µ–º –≤ Zoho Books (–∫–∞–∫ —Å LUNA BEAUTY)
        print('1Ô∏è‚É£ –û–ë–ù–û–í–õ–ï–ù–ò–ï –í ZOHO BOOKS:')
        print('-' * 40)
        
        update_data = {
            'cf_tax_id': test_contact['new_vat']
        }
        
        print(f'üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º: {json.dumps(update_data, ensure_ascii=False)}')
        
        update_success = await api_client.update_contact(
            contact_id=test_contact['contact_id'],
            contact_data=update_data,
            organization_id=organization_id
        )
        
        if not update_success:
            print('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ Zoho Books')
            return False
            
        print('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Zoho Books')
        print()
        
        # –®–ê–ì 2: –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∫–∞–∫ —Å LUNA BEAUTY)
        print('2Ô∏è‚É£ –ü–û–õ–£–ß–ï–ù–ò–ï –ê–ö–¢–£–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–• –ò–ó ZOHO:')
        print('-' * 40)
        
        print('‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ Zoho...')
        await asyncio.sleep(5)
        
        updated_contact = await api_client.get_contact_details(
            organization_id=organization_id,
            contact_id=test_contact['contact_id']
        )
        
        if not updated_contact:
            print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
            return False
            
        # –î–æ–±–∞–≤–ª—è–µ–º organization_id –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        updated_contact['organization_id'] = organization_id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        final_vat = updated_contact.get('cf_tax_id', '')
        final_vat_unformatted = updated_contact.get('cf_tax_id_unformatted', '')
        
        print(f'üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Zoho:')
        print(f'   cf_tax_id: "{final_vat}"')
        print(f'   cf_tax_id_unformatted: "{final_vat_unformatted}"')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º custom_field_hash –∏ custom_fields
        hash_data = updated_contact.get('custom_field_hash', {})
        print(f'   custom_field_hash.cf_tax_id: "{hash_data.get("cf_tax_id", "")}"')
        
        custom_fields = updated_contact.get('custom_fields', [])
        for field in custom_fields:
            if field.get('api_name') == 'cf_tax_id':
                print(f'   custom_fields.value: "{field.get("value", "")}"')
                print(f'   custom_fields.value_formatted: "{field.get("value_formatted", "")}"')
                break
        
        print()
        
        if final_vat == test_contact['new_vat']:
            print('‚úÖ VAT —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Zoho!')
            zoho_success = True
        else:
            print(f'‚ùå VAT –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Zoho (–æ–∂–∏–¥–∞–ª–∏ "{test_contact["new_vat"]}", –ø–æ–ª—É—á–∏–ª–∏ "{final_vat}")')
            zoho_success = False
        
        print()
        
        # –®–ê–ì 3: –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª (–∫–∞–∫ —Å LUNA BEAUTY)
        print('3Ô∏è‚É£ –û–ë–ù–û–í–õ–ï–ù–ò–ï –õ–û–ö–ê–õ–¨–ù–û–ì–û –§–ê–ô–õ–ê:')
        print('-' * 40)
        
        file_path = 'data/full_contacts/PARKENTERTAINMENT_20082562863_full.json'
        
        if Path(file_path).exists():
            with open(file_path, 'r', encoding='utf-8') as f:
                contacts = json.load(f)
            
            print(f'üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞')
            
            # –ù–∞—Ö–æ–¥–∏–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
            contact_updated = False
            for i, contact in enumerate(contacts):
                if contact.get('contact_id') == test_contact['contact_id']:
                    contacts[i] = updated_contact
                    contact_updated = True
                    print(f'‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω –∏ –æ–±–Ω–æ–≤–ª–µ–Ω (–ø–æ–∑–∏—Ü–∏—è {i})')
                    break
            
            if contact_updated:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                with open(file_path, 'w', encoding='utf-8') as f:
                    json.dump(contacts, f, ensure_ascii=False, indent=2)
                
                print('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏')
            else:
                print('‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ')
        else:
            print(f'‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω')
        
        print()
        
        # –®–ê–ì 4: –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à (–∫–∞–∫ —Å LUNA BEAUTY)
        print('4Ô∏è‚É£ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–≠–®–ê:')
        print('-' * 40)
        
        try:
            cache = OptimizedContactCache('data/optimized_cache/all_contacts_optimized.json')
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å –∏–∑ –∫—ç—à–∞
            if test_contact['contact_id'] in cache.contacts:
                old_contact = cache.contacts[test_contact['contact_id']]
                
                # –£–¥–∞–ª—è–µ–º –∏–∑ VAT –∏–Ω–¥–µ–∫—Å–∞
                if old_contact.vat_number:
                    cache.vat_index.pop(old_contact.vat_number, None)
                    print(f'üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π VAT –∏–∑ –∏–Ω–¥–µ–∫—Å–∞: "{old_contact.vat_number}"')
                
                # –£–¥–∞–ª—è–µ–º –∏–∑ email –∏–Ω–¥–µ–∫—Å–∞
                if old_contact.email:
                    cache.email_index.pop(old_contact.email, None)
                
                # –£–¥–∞–ª—è–µ–º –∏–∑ company –∏–Ω–¥–µ–∫—Å–∞
                if old_contact.company_name:
                    company_contacts = cache.company_index.get(old_contact.company_name, [])
                    if test_contact['contact_id'] in company_contacts:
                        company_contacts.remove(test_contact['contact_id'])
                    if not company_contacts:
                        cache.company_index.pop(old_contact.company_name, None)
                
                # –£–¥–∞–ª—è–µ–º —Å–∞–º –∫–æ–Ω—Ç–∞–∫—Ç
                del cache.contacts[test_contact['contact_id']]
                
                print('üóëÔ∏è –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫—ç—à–∞')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            cache.add_contacts([updated_contact])
            cache.save_cache()
            
            print('‚úÖ –ö—ç—à –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫—ç—à–µ
            cached_contact = cache.search_by_vat(test_contact['new_vat'])
            if cached_contact:
                print(f'üîç –ü–æ–∏—Å–∫ –≤ –∫—ç—à–µ –ø–æ –Ω–æ–≤–æ–º—É VAT "{test_contact["new_vat"]}": –ù–ê–ô–î–ï–ù')
                print(f'   –ö–æ–º–ø–∞–Ω–∏—è: {cached_contact.company_name}')
            else:
                print(f'‚ùå –ü–æ–∏—Å–∫ –≤ –∫—ç—à–µ –ø–æ –Ω–æ–≤–æ–º—É VAT "{test_contact["new_vat"]}": –ù–ï –ù–ê–ô–î–ï–ù')
                
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞: {e}')
        
        print()
        
        # –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
        print('5Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:')
        print('-' * 40)
        
        if zoho_success:
            print('üéâ –£–°–ü–ï–•! –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
            print('‚úÖ Zoho Books –æ–±–Ω–æ–≤–ª–µ–Ω')
            print('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω') 
            print('‚úÖ –ö—ç—à –æ–±–Ω–æ–≤–ª–µ–Ω')
            print()
            print('üöÄ –ì–û–¢–û–í–´ –ö –ú–ê–°–°–û–í–û–ú–£ –û–ë–ù–û–í–õ–ï–ù–ò–Æ –û–°–¢–ê–õ–¨–ù–´–• –ö–û–ù–¢–ê–ö–¢–û–í!')
            return True
        else:
            print('‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å')
            print('üí≠ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:')
            print('   ‚Ä¢ –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏')
            print('   ‚Ä¢ –û—Å–æ–±—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤')
            print('   ‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã API')
            return False
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        return False
    
    finally:
        await api_client.client.aclose()

if __name__ == "__main__":
    success = asyncio.run(update_contact_full_method())
    print()
    if success:
        print('üéØ –ú–ï–¢–û–î LUNA BEAUTY –°–†–ê–ë–û–¢–ê–õ!')
        print('üí° –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤')
    else:
        print('üîß –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è') 