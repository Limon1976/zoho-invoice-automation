#!/usr/bin/env python3
"""
–ë–´–°–¢–†–û–ï –ú–ê–°–°–û–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï VAT –ü–†–ï–§–ò–ö–°–û–í
–£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –¥–ª–∏–Ω–Ω—ã—Ö –ø–∞—É–∑
"""

import asyncio
import json
import sys
from pathlib import Path
from datetime import datetime

sys.path.append(str(Path('.').parent))
from src.infrastructure.zoho_api import ZohoAPIClient
from src.infrastructure.config import get_config

async def fast_mass_update_vat():
    print("üöÄ –ë–´–°–¢–†–û–ï –ú–ê–°–°–û–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï VAT –ü–†–ï–§–ò–ö–°–û–í")
    print("="*60)
    print(f"‚è∞ –ù–∞—á–∞–ª–æ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("‚ö° –†–µ–∂–∏–º: –ë–´–°–¢–†–´–ô (–±–µ–∑ –ø–∞—É–∑)")
    print()
    
    confirm = input("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ? (y/N): ").lower()
    if confirm != 'y':
        print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    print("\nüé¨ –ó–ê–ü–£–°–ö...")
    print("="*60)
    
    # API –∫–ª–∏–µ–Ω—Ç
    config = get_config()
    api_client = ZohoAPIClient(
        client_id=config.zoho.client_id,
        client_secret=config.zoho.client_secret,
        refresh_token=config.zoho.refresh_token or ''
    )
    
    org_id = "20082562863"
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
    with open('data/full_contacts/PARKENTERTAINMENT_20082562863_full.json', 'r', encoding='utf-8') as f:
        all_contacts = json.load(f)
    
    # –¶–µ–ª–µ–≤—ã–µ ID
    target_ids = [
        '281497000005903525',  # AEvent
        '281497000006344068',  # AFanna fleur
        '281497000006068005',  # Awokado Project
        '281497000005903457',  # Be Unique
        '281497000005903389',  # Bimboo
        '281497000005007050',  # Carrefour Polska
        '281497000005007187',  # CCM Construction
        '281497000004571563',  # CHRONOS APARTAMENTY
        '281497000001825719',  # ETERIA CONSULTING
        '281497000005395276',  # EUROSTAR-TRANSPORT.EU
        '281497000004567718',  # F.P.H.U. PROBOX
        '281497000005999849',  # Faf Global
        '281497000005940057',  # Flower Island
        '281497000006365071',  # FN EUROPE
        '281497000006113586',  # Globe Trade Centre
        '281497000005126385',  # Google ADS
        '281497000005237353',  # Grid Dynamics Poland
        '281497000005962003',  # HOLO SP.
        '281497000005446183',  # Indigo Mental Club
        '281497000006113397'   # ISKRY
    ]
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    contacts = []
    for contact in all_contacts:
        if contact.get('contact_id') in target_ids:
            contacts.append({
                'id': contact.get('contact_id'),
                'name': contact.get('company_name', 'Unknown'),
                'type': contact.get('customer_sub_type', 'unknown'),
                'vat': contact.get('cf_tax_id', '')
            })
    
    print(f"üìä –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {len(contacts)}")
    print()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = {'total': len(contacts), 'updated': 0, 'already_ok': 0, 'errors': 0}
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞
    for i, contact in enumerate(contacts, 1):
        print(f"{i:2d}/{len(contacts)} {contact['name'][:40]}...", end=" ")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            current = await api_client.get_contact_details(org_id, contact['id'])
            
            if not current:
                print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
                stats['errors'] += 1
                continue
            
            current_vat = current.get('cf_tax_id', '')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å
            if current_vat.startswith('PL'):
                print(f"‚úÖ –£–∂–µ OK ({current_vat})")
                stats['already_ok'] += 1
                continue
            
            if not current_vat:
                print("‚è≠Ô∏è –ù–µ—Ç VAT")
                continue
            
            # –û–±–Ω–æ–≤–ª—è–µ–º
            new_vat = f"PL{current_vat}"
            update_data = {
                'custom_fields': [{'api_name': 'cf_tax_id', 'value': new_vat}]
            }
            
                         response = await api_client.update_contact(org_id, update_data, contact['id'])
            
            if response:
                # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                await asyncio.sleep(0.2)
                updated = await api_client.get_contact_details(org_id, contact['id'])
                
                if updated and updated.get('cf_tax_id', '') == new_vat:
                    print(f"üéâ {current_vat} ‚Üí {new_vat}")
                    stats['updated'] += 1
                else:
                    print("‚ùå –ù–µ –æ–±–Ω–æ–≤–∏–ª—Å—è")
                    stats['errors'] += 1
            else:
                print("‚ùå API –æ—à–∏–±–∫–∞")
                stats['errors'] += 1
                
        except Exception as e:
            print(f"‚ùå {str(e)[:30]}...")
            stats['errors'] += 1
    
    # –ò—Ç–æ–≥–∏
    print()
    print("üìä –ò–¢–û–ì–ò:")
    print(f"   üéØ –í—Å–µ–≥–æ: {stats['total']}")
    print(f"   üéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {stats['updated']}")
    print(f"   ‚úÖ –£–∂–µ –≥–æ—Ç–æ–≤–æ: {stats['already_ok']}")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {stats['errors']}")
    
    success_rate = ((stats['updated'] + stats['already_ok']) / stats['total']) * 100
    print(f"   üìà –£—Å–ø–µ—Ö: {success_rate:.1f}%")
    
    if success_rate >= 90:
        print("üèÜ –û–¢–õ–ò–ß–ù–û!")
    elif success_rate >= 70:
        print("üëç –•–û–†–û–®–û!")
    else:
        print("‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´!")
    
    print(f"‚è∞ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    await api_client.client.aclose()
    return stats

if __name__ == "__main__":
    results = asyncio.run(fast_mass_update_vat())
    if results:
        print("\nüéâ –ú–ê–°–°–û–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    else:
        print("\n‚ùå –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–ï–†–í–ê–ù–û!") 