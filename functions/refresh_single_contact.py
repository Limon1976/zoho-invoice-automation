#!/usr/bin/env python3
"""
Refresh Single Contact from Zoho
=================================

–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–Ω–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏–∑ Zoho API
"""

import os
import sys
import json
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ path
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

from functions.zoho_api import ZohoAPI


async def get_single_contact_from_zoho(contact_name: str, organization_id: str = None):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç –∏–∑ Zoho –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    
    Args:
        contact_name: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        organization_id: ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω - –∏—â–µ–º –≤–æ –≤—Å–µ—Ö)
    """
    
    print(f"üîç –ò—â–µ–º –∫–æ–Ω—Ç–∞–∫—Ç: {contact_name}")
    
    zoho_api = ZohoAPI()
    
    # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
    organizations = {
        "20092948714": "TaVie Europe O√ú",
        "20082562863": "PARKENTERTAINMENT Sp. z o. o."
    }
    
    if organization_id:
        # –ò—â–µ–º —Ç–æ–ª—å–∫–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        organizations = {organization_id: organizations.get(organization_id, "Unknown")}
    
    found_contacts = []
    
    for org_id, org_name in organizations.items():
        print(f"üìä –ü–æ–∏—Å–∫ –≤ {org_name} ({org_id})...")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –ø–æ–∏—Å–∫–æ–º –ø–æ –∏–º–µ–Ω–∏
            response = await zoho_api.get_contacts(
                organization_id=org_id,
                search_text=contact_name
            )
            
            if response and "contacts" in response:
                contacts = response["contacts"]
                print(f"   –ù–∞–π–¥–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                
                for contact in contacts:
                    contact_id = contact.get("contact_id")
                    contact_name_found = contact.get("contact_name", "")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ
                    if contact_name.lower() in contact_name_found.lower():
                        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω: {contact_name_found} (ID: {contact_id})")
                        
                        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ
                        full_contact = await zoho_api.get_contact_details(org_id, contact_id)
                        if full_contact:
                            full_contact['organization_id'] = org_id
                            full_contact['organization_name'] = org_name
                            found_contacts.append(full_contact)
            else:
                print(f"   ‚ùå –ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ {org_name}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ {org_name}: {e}")
    
    return found_contacts


async def update_contact_in_files(contact_data: dict):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ñ–∞–π–ª–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    """
    org_id = contact_data.get('organization_id')
    contact_id = contact_data.get('contact_id')
    contact_name = contact_data.get('contact_name')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–π–ª –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if org_id == "20092948714":
        file_path = "data/full_contacts/TaVie_Europe_20092948714_full.json"
    elif org_id == "20082562863":
        file_path = "data/full_contacts/PARKENTERTAINMENT_20082562863_full.json"
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {org_id}")
        return False
    
    file_path = Path(file_path)
    
    if not file_path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}")
        return False
    
    print(f"üìÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª: {file_path}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
    with open(file_path, 'r', encoding='utf-8') as f:
        contacts = json.load(f)
    
    # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–∞–∫—Ç
    contact_updated = False
    for i, existing_contact in enumerate(contacts):
        if existing_contact.get('contact_id') == contact_id:
            contacts[i] = contact_data
            contact_updated = True
            print(f"   ‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω: {contact_name}")
            break
    
    # –ï—Å–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
    if not contact_updated:
        contacts.append(contact_data)
        print(f"   ‚ûï –ö–æ–Ω—Ç–∞–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {contact_name}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(file_path, 'w', encoding='utf-8') as f:
        json.dump(contacts, f, ensure_ascii=False, indent=2)
    
    print(f"   üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Å {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏")
    return True


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –û–î–ù–û–ì–û –ö–û–ù–¢–ê–ö–¢–ê –ò–ó ZOHO")
    print("=" * 50)
    
    # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
    contact_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞: ").strip()
    
    if not contact_name:
        contact_name = "Horrer Automobile"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {contact_name}")
    
    # –ò—â–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ Zoho
    found_contacts = await get_single_contact_from_zoho(contact_name)
    
    if not found_contacts:
        print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Zoho")
        return
    
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(found_contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ñ–∞–π–ª–µ
    for contact in found_contacts:
        org_name = contact.get('organization_name')
        contact_name_found = contact.get('contact_name')
        
        print(f"\nüìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {contact_name_found} ({org_name})")
        
        success = await update_contact_in_files(contact)
        if success:
            print(f"   ‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ —Ñ–∞–π–ª–µ")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞")
    
    print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(main()) 